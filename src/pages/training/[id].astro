---
import Breadcrumb from "../../components/Breadcrumb.astro";
import { PrimaryButton } from "../../components/Button.tsx";
import OtherTrainings from "../../components/OtherTrainings.astro";
import { apiConfig } from '../../config/api';
import Layout from "../../layouts/Layout.astro";
import { formatPrice } from "../../utils/formatPrice";

export interface FacilitatorProfile {
  name: string;
  description: string;
  role: string;
  image: string;
  largeImage: string;
}

export async function getStaticPaths() {
  const res = await fetch(`${apiConfig.baseUrl}/trainings`, {
            headers: {
                "Authorization": `Bearer ${apiConfig.lifetimeToken}`,
                "Content-Type": "application/json"
            },
            method: "GET"})

  const json = await res.json();
  const trainings = json.data

  const paths = trainings.map((training : any) => ({
    params: { id: training.id.toString(), fallback: "blocking" },
  }));

  return paths
}


const {id} = Astro.params

export async function fetchTraining(params : any ) {
  const res = await fetch(`${apiConfig.baseUrl}/trainings/${params}?populate[profiles][populate]=image&populate[image]=*&populate[outlines]=*&populate[flyer]=*`,
    {
      headers: {
          "Authorization": `Bearer ${apiConfig.lifetimeToken}`,
          "Content-Type": "application/json"
      },
      method: "GET"
    }
  );
  const training = await res.json();
  const data = training.data

  return {
    props: { data },
  };
}

const training = await fetchTraining(id)

const allImages = training.props.data?.attributes.image

var urlImage = `${apiConfig.fileBaseUrl}${allImages.data?.attributes.url}`


var trainingInfo = training.props.data

var listFacilitators : FacilitatorProfile[] = training.props.data?.attributes.profiles.data.map((profile : any) => {
  var largeImageUrl = `${apiConfig.fileBaseUrl}${profile?.attributes?.image.data.attributes.url}` ?? "../../../icons/icon-default-profile.png"
  var smallImageUrl = `${apiConfig.fileBaseUrl}${profile?.attributes?.image.data.attributes.formats.small.url}` ?? "../../../icons/icon-default-profile.png"

  var facilitator : FacilitatorProfile = {
    description: profile.attributes.description,
    image: smallImageUrl,
    largeImage: largeImageUrl,
    name: profile.attributes.name,
    role: profile.attributes.role,
  }

  return facilitator
})

var outlines = trainingInfo?.attributes.outlines.map((value: any) => {
  return value.outline
})
---
<style>
  .circle {
  	line-height: 0;		/* remove line-height */ 
  	display: inline-block;	/* circle wraps image */
  	margin: 5px;
    border: 4px solid rgba(200,200,200,0.4);
  	border-radius: 50%;	/* relative value */
  	/*box-shadow: 0px 0px 5px rgba(0,0,0,0.4);*/
  	transition: linear 0.25s;
    height: 128px;
    width: 128px;
  }
  .circle img {
  	border-radius: 50%;	/* relative value for
  				   adjustable image size */
  }
  .circle:hover {
  	transition: ease-out 0.2s;
    border: 4px solid rgba(0,0,0,0.2);
    -webkit-transition: ease-out 0.2s;
  }
  a.circle {
    color: transparent;
  } /* IE fix: removes blue border */
</style>

<Layout title="Training Info">
  <div class="flex flex-col gap-8">
    <div class="h-100 bg-bgSecondary w-auto flex sm:flex-row gap-8 sm:gap-0 flex-col flex-auto py-8 overflow-hidden">
      <div class="sm:w-[55%] w-full flex flex-col py-16 sm:ml-28 gap-4 md:gap-0 px-8 md:px-0">
        <div class="sm:translate-x-8 ">
          <Breadcrumb title={trainingInfo?.attributes.title} isArrow={false} isAlt={true}/>
        </div>
        <h2 class="flex-grow self-start items-start justify-center pr-8 md:p-8 sm:p-4 font-normal">{trainingInfo.attributes.title}</h2>
      </div>
      <div class="sm:w-[45%] flex flex-col justify-center items-center mr-16">
          <img
            src={urlImage}
            alt="A description of my image."
            style={{ width: '600px', height: 'auto', backgroundSize: 'cover', borderRadius: '16px' }}
            class="object-cover"
          />
      </div>
    </div>
    <section>
      <div class="flex sm:flex-row flex-col gap-8">
        <div class="flex flex-col flex-1 flex-grow">
          <div class="sm:w-4/5 w-full">
            <article>
              <h3>Deskripsi Pelatihan</h3>
              <br>
              <p>{trainingInfo?.attributes.description}</p>
            </article>
            <article class="mt-12">
              <h3>Proses Pelatihan dan Sertifikasi</h3>
              <br>
              <p>{trainingInfo?.attributes.explanation}</p>
            </article>
            <article class="mt-12 bg-bgLightSkyBlue p-8">
              <h3 class="text-complementary font-normal">Outline Materi</h3>
              <br>
              <div class="px-2">
                {trainingInfo?.attributes.outlines.map((value : any, index: number) => {
                  return (
                    <p>{index + 1}. {value.outline}</p>
                  )
                })}
              </div>
              <p class="italic text-complementary mt-2">
                <b class="text-complementary font-bold">Note: </b>Fasilitator akan membimbing penyiapan dan penyaringan evidence (portofolio)
              </p>
            </article>
            <article class="mt-12">
              <h3>Fasilitator</h3>
              <br>
              <div class="md:flex md:flex-row gap-8 grid grid-cols-1">
                {
                  listFacilitators.map((profile) => {
                    return (
                      <div class="sm:flex sm:flex-col gap-8 grid grid-cols-1 w-full">
                        <a class="circle">
	                        <img height="128" width="128" src={profile.image} alt={profile.name}>
                        </a>
                        <div class="relative flex-grow flex flex-col gap-4">
                          <h4>
                            {profile.name}
                          </h4>
                          <subtitle>{profile.role}</subtitle>
                        </div>
                      </div>
                    )
                  })
                }
              </div>
            </article>
            <article class="md:mt-20 mt-12">
              <h3>Biaya Investasi</h3>
              <br>
              <div class="flex flex-col gap-8">
                <div class="flex flex-col gap-3">
                  <h5>Offline + Bimbingan Portofolio Online 1 x</h5>
                  <div class="subtitle-alt">Sudah termasuk PPN, materi pelatihan, goodie bag, sertifikat kepersertaan, dan biaya ujian sertifikasi</div>
                  <div><span class="font-semibold text-primary text-2xl">{formatPrice(trainingInfo?.attributes.price.offline ?? 0)},-</span> /peserta</div>
                </div>
                <div class="flex flex-col gap-3">
                  <h5>Online + Bimbingan Portofolio Online 1 x</h5>
                  <div class="subtitle-alt">Sudah termasuk PPN, materi pelatihan, goodie bag, sertifikat kepersertaan, dan biaya ujian sertifikasi</div>
                  <div><span class="font-semibold text-primary text-2xl">{formatPrice(trainingInfo?.attributes.price.online ?? 0 )},-</span> /peserta</div>
                </div>
              </div>
            </article>
          </div>
          </div>
          <div class="sm:w-2/5 flex flex-col h-auto mb-auto pb-4 box-border justify-start items-center bg-bgCard text-white text-start rounded-xl">
            <div class="bg-secondary w-full p-6 rounded-t-xl flex flex-col gap-4">
              <div class="text-sm">{trainingInfo?.attributes.category}</div>
              <h5 class="text-2xl">Deskripsi Program</h5>
            </div>
            <div class="text-black">
              <div class="p-6 rounded-t-xl flex flex-row gap-4 flex-shrink min-w-10 items-center">
                <div class="flex flex-col basis-20">
                  <img src="../../../icons/program/icon-type.png"/>
                </div>
                <div class="flex flex-col gap-2">
                  <subtitle class="text-sm">Tipe Kelas</subtitle>
                  <h4>Online & Offline</h4>
                </div>
              </div>
              <div class="p-6 rounded-t-xl flex flex-row gap-4 flex-shrink min-w-10 items-start">
                <div class="flex flex-col basis-20">
                  <img src="../../../icons/program/icon-date-alt.png"/>
                </div>
                <div class="flex flex-col gap-2">
                  <subtitle class="text-sm">Diselenggarakan Pada</subtitle>
                  {trainingInfo?.attributes.date.all.map((value: any, index: number) => {
                    return (
                      <h4>{value}</h4>
                    )
                  })}
                </div>
              </div>
              <div class="p-6 rounded-t-xl flex flex-row gap-4 flex-shrink min-w-10 items-start">
                <div class="flex flex-col basis-20">
                  <img src="../../../icons/program/icon-price.png"/>
                </div>
                <div class="flex flex-col gap-2">
                  <subtitle class="text-sm">Harga / Peserta</subtitle>
                  <div class="block relative">
                    <h5>
                      Online:
                    </h5>
                    <h4>
                      {formatPrice(trainingInfo?.attributes.price.online ?? 0)},-
                    </h4>
                  </div>
                  <div class="block relative">
                    <h5>
                      Offline:
                    </h5>
                    <h4>
                      {formatPrice(trainingInfo?.attributes.price.offline ?? 0)},-
                    </h4>
                  </div>
                </div>
              </div>
              <div class="flex flex-auto flex-col gap-4 mt-8">
                <PrimaryButton client:only="react" title="Download Flyer" primary={false} icon="../../../icons/icon-download.png" action={"downloadFile"} params={
                  {
                    "url": `${apiConfig.fileBaseUrl}${trainingInfo?.attributes?.flyer?.data?.attributes?.url}`,
                    "title": trainingInfo?.attributes.title
                  }
                }/>
                <PrimaryButton
                  client:only="react"
                  title="Hubungi Kami"
                  primary={true}
                  icon="../../../icons/icon-message.png"
                  action={"contactWhatsapp"}
                  params={
                    {"title": trainingInfo?.attributes.title}
                  }
                />
              </div>
            </div>
          </div>
        </div>
      </section> 
  </div>  
  <OtherTrainings />
</Layout>