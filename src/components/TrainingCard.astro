---
import { formatPrice } from '../utils/formatPrice';
import Chip from './Chip.astro';
import Divider from './Divider';

interface Props {
  title: string;
  body: string;
  category: string;
  href: string;
  bgColor: string;
  image: any;
  id: number;
  date_list: string[];
  onlinePrice: number;
  offlinePrice: number;
  isOnline: boolean;
}

const { href, title, body, bgColor, image, category, onlinePrice, offlinePrice, isOnline, id, date_list} = Astro.props;

// const formattedStartDate = fromDate.toLocaleDateString('id-ID', {day: 'numeric', month: 'short'});
// const formattedEndDate = toDate.toLocaleDateString('id-ID', {day: 'numeric', month: 'short', year: 'numeric'});
// const timeDifference = getDaysDifference(Date.now())
const timeDifference = 10

var urlImage = `http://0.0.0.0:1337${image}`
console.log(urlImage)
---

<li class=`link-card ${bgColor}`>
  <div class="flex flex-col relative gap-8">
    <!-- <div class=`bg-[url(${optimizedBackground.src})]`/> -->
    <div class="min-h-max">
      <img
          src={urlImage}
          alt="A description of my image."
          style={{ width: '400px', height: '200px', backgroundSize: 'cover' }}
          class="object-cover rounded-t-xl"
      />
      <div class="absolute -translate-y-20 left-0 z-10 mt-6">
        <div class="flex flex-row gap-2">
          <a class="py-2 px-2 rounded-lg relative flex items-center gap-2">
            <div class="bg-bgComplement rounded-xl text-complementary font-normal px-4 py-0.5 leading-2 flex items-center">
              {isOnline ? (
                <p class="mb-1 flex items-center text-sm">
                  <span class="px-2 py-[8px] rounded-full bg-complementary align-middle mr-1.5"></span>Online
                </p>
              ) : (
                <p class="bg-bgSecondary text-secondary text-sm">Offline</p>
              )}
            </div>
            <div class="bg-bgComplement rounded-xl text-complementary font-normal px-4 py-0.5 text-sm leading-2 flex items-center">
              <p class="mb-1 text-sm">{timeDifference} Hari</p>
            </div>
          </a>
        </div>
      </div>
    </div>
    <div class="flex flex-col px-4 justify-start content-start text-left">
      <div class="text-left mt-0 -translate-x-4">
      <Chip title={category} bgColor={"bg-bgLightSkyBlue"} textColor={"text-secondary"}/>
    </div>
    <a href=`/training/${id}`>
      <h2 class="font-normal mt-0 text-black text-left break-words max-w-full h-24 self-center">
        {title}
      </h2>
    </a>
    <Divider />
    <div class="mb-4">
      <subtitle class="text-dimGray text-base font-extralight opacity-70">Diselenggarakan oleh:</subtitle>
      {date_list.map((value, index) => {
      return (
        <div class="flex flex-row">
          <img
            src={"../../icons/icon-date.svg"}
            alt="Date Icon"
            class="object-cover w-8 h-auto bg-cover rounded-md mr-3"
          />
          <p>
            {value}
          </p>
        </div>
      )
    })}  
    </div>
    <div class="flex flex-col gap-2 mt-4">
      <span class="text-[1.25rem] text-primary"><span class="text-dimGray">Offline:</span> {formatPrice(offlinePrice)},-</span>
      <span class="text-[1.25rem] text-primary"><span class="text-dimGray">Online:</span> {formatPrice(onlinePrice)},-</span>
    </div>
    </div>
  </a>
   </div>
</li>
<style>
  @tailwind base;
  @tailwind components;
  @tailwind utilities;

  .link-card {
    @apply list-none flex bg-none rounded-lg shadow-inner transition duration-500 ease-out max-w-[350px] min-w-80 break-words flex-wrap whitespace-normal max-h-[100vh] pb-8;
    background-size: 120%;
    background-position: 100%;
    border-radius: 7px;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
  }
  .link-card > a {
    width: 150%;
    text-decoration: none;
    line-height: 1.4;
    padding: calc(1.5rem - 1px);
    border-radius: 8px;
    color: black;
    opacity: 0.8;
  }

  h2 {
    margin: 0;
    font-size: 1.25rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
  }
  /* .link-card:is(:hover, :focus-within) {
    background-position: 0;
    background-image: var(--accent-gradient);
  } */
  .link-card:is(:hover, :focus-within) h2 {
    color: rgb(var(--accent-light));
  }
</style>
