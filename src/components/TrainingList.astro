---
import { apiConfig } from "../config/api";
import { TrainingCard } from "./TrainingCard";

export interface TrainingItem {
  id: number,
  title: string,
  description: string,
  category: string,
  image: string,
  is_online: boolean,
  date_list: string[],
  price: {
    price_online: number,
    price_offline: number,
    discount: number
  }
}

var {predefinedTrainingLists, isHomePage} = Astro.props;

var allTrainingList: TrainingItem[] = []

if(predefinedTrainingLists === undefined || predefinedTrainingLists.length === 0){
  const response = await fetch(`${apiConfig.baseUrl}/trainings?populate=image`, {
      headers: {
          "Authorization": `Bearer ${apiConfig.lifetimeToken}`,
          "Content-Type": "application/json"
      },
      method: "GET"
    })
    var json = await response.json();
    console.log(json)
  var jsonTrainingList = json.data.map((value : any) => {
    var attr = value.attributes
    var imgUrl = attr.image.data.attributes.formats.small.url
    return {
        id: value.id,
        title: attr.title,
        description: attr.description,
        category: attr.category,
        image: imgUrl,
        is_online: true,
        date_list: attr.date.all,
        price:{
          price_online: attr.price?.online ?? 0,
          price_offline: attr.price?.offline ?? 0,
          discount: 0,
        },
    }
  })

  allTrainingList = jsonTrainingList.slice(0, 10)
}else{
  allTrainingList = predefinedTrainingLists.map((value : any) => {
    var attr = value.attributes
    var imgUrl = attr.image.data.attributes.formats.small.url
        return {
        id: value.id,
        title: attr.title,
        description: attr.description,
        category: attr.category,
        image: imgUrl,
        is_online: true,
        date_list: attr.date.all,
        price:{
          price_online: attr.price?.online ?? 0,
          price_offline: attr.price?.offline ?? 0,
          discount: 0,
        },
    }
  })
  console.log('hah' + predefinedTrainingLists.length)
}

---
<div class="flex whitespace-nowrap overflow-x-auto">
  <div class="flex flex-1">
    {allTrainingList.map((training) => {
      return (
        <div class="min-w-[380px]"> {/* You can adjust the min width as needed */}
          <TrainingCard
            title={training.title}
            bgColor="bg-bgCardAlt"
            body={training.description}
            href=""
            image={training.image}
            category={training.category}
            id={training.id}
            onlinePrice={training.price.price_online}
            offlinePrice={training.price.price_offline}
            isOnline={training.is_online}
            date_list={training.date_list}
            isHomePage={isHomePage}
          />
        </div>
      );
    })}
  </div>
</div>
